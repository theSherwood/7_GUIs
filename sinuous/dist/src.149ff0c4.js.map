{"version":3,"sources":["../observable/src/observable.js","../observable/src/utils.js","../htm/src/index.js","../htm/src/build.js","../h/src/index.js","../h/src/api.js","../h/src/constants.js","../h/src/add.js","../h/src/property.js","../h/src/h.js","../src/index.js","../h/src/insert.js","../h/src/clear.js","src/components/card.js","src/tasks/counter.js","src/tasks/temperatureConverter.js","src/tasks/flightBooker.js","src/tasks/timer.js","src/tasks/crud.js","src/tasks/circleDrawer.js","src/tasks/cells/sampleData.js","src/tasks/cells/parse.js","src/tasks/cells/cells.js","src/app.js","src/index.js"],"names":["EMPTY_ARR","tracking","queue","isListening","root","fn","prevTracking","rootUpdate","resetUpdate","result","_unsubscribe","sample","value","transaction","prevQueue","q","forEach","data","_pending","pending","observable","nextValue","arguments","length","_observers","has","add","_observables","push","clearedUpdate","_runObservers","Set","observer","_fresh","$o","computed","update","_children","prevChildren","u","indexOf","getChildrenDeep","children","reduce","res","curr","concat","removeFreshChildren","o","_update","delete","cleanup","_cleanups","subscribe","on","obs","seed","onchanges","unsubscribe","c","evaluate","h","built","fields","args","propBody","i","field","type","Object","assign","key","prev","parts","prop","j","call","this","apply","build","statics","char","propName","mode","buffer","quote","current","commit","replace","CACHES","Map","regular","tmp","get","set","custom","Array","isArray","bind","wrap","api","groupCounter","parent","endMark","mark","document","createTextNode","Node","nodeType","firstChild","lastChild","t","insertBefore","eventProxy","e","_listeners","context","options","isSvg","from","el","item","arg","createElementNS","createElement","createDocumentFragment","property","insert","splice","hs","html","htm","svg","startNode","parentNode","previousSibling","nextSibling","removeChild","textContent","name","isAttr","isCss","style","setProperty","slice","setAttribute","cssText","toLowerCase","addEventListener","removeEventListener","card","title","counter","count","trunc","n","Number","toFixed","remove0","test","getC","f","getF","r","isValid","temp","temperatureConverter","to","target","flightMap","tryAsDate","dateString","dateArr","split","reverse","Date","join","valueOf","formatAsString","date","toISOString","flightBooker","flightType","startDate","returnDate","error1","error2","error3","isBookButtonDisabled","isOneWay","startDateClass","returnDateClass","book","timeStrings","alert","timer","MAX","interval","duration","durationFormatted","start","time","progress","startTimer","clearInterval","setInterval","crud","prefix","entries","filteredEntries","map","entry","filter","startsWith","surname","selected","createHandler","updateHandler","deleteHandler","circleDrawer","BASE_RADIUS","step","snapshots","radius","resizing","present","handleRightClick","preventDefault","stopPropagation","circle","x","cx","baseVal","y","cy","addCircle","layerX","layerY","newSnapshot","addSnapshot","newSnapshots","endResize","resizingIndex","findIndex","newPresent","overlay","circleSVG","view","undo","Math","max","redo","min","cir","sampleData","A0","A1","A2","A3","B1","B2","A5","B5","A6","B6","A7","B7","A8","B8","A9","B9","A10","B10","C0","D0","C1","D1","C2","D2","C3","D3","C4","D4","C5","D5","C7","D7","C8","D8","C9","D9","C10","D10","C11","D11","C12","D12","C14","D14","C15","D15","Parser","store","columns","rows","cells","operations","sum","a","b","sub","mul","div","mod","exp","letters","numbers","letter","number","arr","end","startI","endI","rangeStart","rangeEnd","splitOperand","findArrRange","cartesianProduct","operand","match","op","isWellFormed","getRange","address","parse","originalString","operand1","operand2","first","parseOperand","second","toString","isNaN","formula","endsWith","includes","operationType","formulaArr","singleOperation","rangeOperation","str","parseOperation","toUpperCase","LETTERS","range","keys","letterRange","getNumberAsLetters","getBase26","remainder","floor","num","findAdjacent","direction","index","undefined","props","shape","tBody","p","focused","handleFocus","createNewCell","dataRef","querySelector","focus","setSelectionRange","cellView","hasFocus","handleBlur","handleKeydown","column","row","selector","newRow","altKey","newColumn","handleInput","clear","app","append"],"mappings":"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","file":"src.149ff0c4.js","sourceRoot":"..","sourcesContent":["import { getChildrenDeep } from './utils.js';\n\nconst EMPTY_ARR = [];\nlet tracking;\nlet queue;\n\n/**\n * Returns true if there is an active observer.\n * @return {boolean}\n */\nexport function isListening() {\n  return !!tracking;\n}\n\n/**\n * Creates a root and executes the passed function that can contain computations.\n * The executed function receives an `unsubscribe` argument which can be called to\n * unsubscribe all inner computations.\n *\n * @param  {Function} fn\n * @return {*}\n */\nexport function root(fn) {\n  const prevTracking = tracking;\n  const rootUpdate = () => {};\n  tracking = rootUpdate;\n  resetUpdate(rootUpdate);\n  const result = fn(() => {\n    _unsubscribe(rootUpdate);\n    tracking = undefined;\n  });\n  tracking = prevTracking;\n  return result;\n}\n\n/**\n * Sample the current value of an observable but don't create a dependency on it.\n *\n * @example\n * computed(() => { if (foo()) bar(sample(bar) + 1); });\n *\n * @param  {Function} fn\n * @return {*}\n */\nexport function sample(fn) {\n  const prevTracking = tracking;\n  tracking = undefined;\n  const value = fn();\n  tracking = prevTracking;\n  return value;\n}\n\n/**\n * Creates a transaction in which an observable can be set multiple times\n * but only trigger a computation once.\n * @param  {Function} fn\n * @return {*}\n */\nexport function transaction(fn) {\n  let prevQueue = queue;\n  queue = [];\n  const result = fn();\n  let q = queue;\n  queue = prevQueue;\n  q.forEach(data => {\n    if (data._pending !== EMPTY_ARR) {\n      const pending = data._pending;\n      data._pending = EMPTY_ARR;\n      data(pending);\n    }\n  });\n  return result;\n}\n\n/**\n * Creates a new observable, returns a function which can be used to get\n * the observable's value by calling the function without any arguments\n * and set the value by passing one argument of any type.\n *\n * @param  {*} value - Initial value.\n * @return {Function}\n */\nfunction observable(value) {\n  function data(nextValue) {\n    if (arguments.length === 0) {\n      if (tracking && !data._observers.has(tracking)) {\n        data._observers.add(tracking);\n        tracking._observables.push(data);\n      }\n      return value;\n    }\n\n    if (queue) {\n      if (data._pending === EMPTY_ARR) {\n        queue.push(data);\n      }\n      data._pending = nextValue;\n      return nextValue;\n    }\n\n    value = nextValue;\n\n    // Clear `tracking` otherwise a computed triggered by a set\n    // in another computed is seen as a child of that other computed.\n    const clearedUpdate = tracking;\n    tracking = undefined;\n\n    // Update can alter data._observers, make a copy before running.\n    data._runObservers = new Set(data._observers);\n    data._runObservers.forEach(observer => (observer._fresh = false));\n    data._runObservers.forEach(observer => {\n      if (!observer._fresh) observer();\n    });\n\n    tracking = clearedUpdate;\n    return value;\n  }\n\n  // Tiny indicator that this is an observable function.\n  data.$o = true;\n  data._observers = new Set();\n  // The 'not set' value must be unique, so `nullish` can be set in a transaction.\n  data._pending = EMPTY_ARR;\n\n  return data;\n}\n\n/**\n * @namespace\n * @borrows observable as o\n */\nexport { observable, observable as o };\n\n/**\n * Creates a new computation which runs when defined and automatically re-runs\n * when any of the used observable's values are set.\n *\n * @param {Function} observer\n * @param {*} value - Seed value.\n * @return {Function} Computation which can be used in other computations.\n */\nfunction computed(observer, value) {\n  observer._update = update;\n\n  // if (tracking == null) {\n  //   console.warn(\"computations created without a root or parent will never be disposed\");\n  // }\n\n  resetUpdate(update);\n  update();\n\n  function update() {\n    const prevTracking = tracking;\n    if (tracking) {\n      tracking._children.push(update);\n    }\n\n    const prevChildren = update._children;\n\n    _unsubscribe(update);\n    update._fresh = true;\n    tracking = update;\n    value = observer(value);\n\n    // If any children computations were removed mark them as fresh.\n    // Check the diff of the children list between pre and post update.\n    prevChildren.forEach(u => {\n      if (update._children.indexOf(u) === -1) {\n        u._fresh = true;\n      }\n    });\n\n    // If any children were marked as fresh remove them from the run lists.\n    const allChildren = getChildrenDeep(update._children);\n    allChildren.forEach(removeFreshChildren);\n\n    tracking = prevTracking;\n    return value;\n  }\n\n  // Tiny indicator that this is an observable function.\n  data.$o = true;\n\n  function data() {\n    if (update._fresh) {\n      update._observables.forEach(o => o());\n    } else {\n      value = update();\n    }\n    return value;\n  }\n\n  return data;\n}\n\nfunction removeFreshChildren(u) {\n  if (u._fresh) {\n    u._observables.forEach(o => {\n      if (o._runObservers) {\n        o._runObservers.delete(u);\n      }\n    });\n  }\n}\n\n/**\n * @namespace\n * @borrows computed as S\n */\nexport { computed, computed as S };\n\n/**\n * Run the given function just before the enclosing computation updates\n * or is disposed.\n * @param  {Function} fn\n * @return {Function}\n */\nexport function cleanup(fn) {\n  if (tracking) {\n    tracking._cleanups.push(fn);\n  }\n  return fn;\n}\n\n/**\n * Subscribe to updates of an observable.\n * @param  {Function} observer\n * @return {Function}\n */\nexport function subscribe(observer) {\n  computed(observer);\n  return () => _unsubscribe(observer._update);\n}\n\n/**\n * Statically declare a computation's dependencies.\n *\n * @param  {Function|Array}   obs\n * @param  {Function} fn - Callback function.\n * @param  {*} [seed] - Seed value.\n * @param  {boolean} [onchanges] - If true the initial run is skipped.\n * @return {Function} Computation which can be used in other computations.\n */\nexport function on(obs, fn, seed, onchanges) {\n  obs = [].concat(obs);\n  return computed((value) => {\n    obs.forEach((o) => o());\n\n    let result = value;\n    if (!onchanges) {\n      result = sample(() => fn(value));\n    }\n\n    onchanges = false;\n    return result;\n  }, seed);\n}\n\n/**\n * Unsubscribe from an observer.\n * @param  {Function} observer\n */\nexport function unsubscribe(observer) {\n  _unsubscribe(observer._update);\n}\n\nfunction _unsubscribe(update) {\n  update._children.forEach(_unsubscribe);\n  update._observables.forEach(o => {\n    o._observers.delete(update);\n    if (o._runObservers) {\n      o._runObservers.delete(update);\n    }\n  });\n  update._cleanups.forEach(c => c());\n  resetUpdate(update);\n}\n\nfunction resetUpdate(update) {\n  // Keep track of which observables trigger updates. Needed for unsubscribe.\n  update._observables = [];\n  update._children = [];\n  update._cleanups = [];\n}\n","export function getChildrenDeep(children) {\n  return children.reduce(\n    (res, curr) => res.concat(curr, getChildrenDeep(curr._children)),\n    []\n  );\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MINI } from './constants.js';\nimport { build, evaluate } from './build.js';\n\nconst CACHES = new Map();\n\nconst regular = function(statics) {\n  let tmp = CACHES.get(this);\n  if (!tmp) {\n    tmp = new Map();\n    CACHES.set(this, tmp);\n  }\n  tmp = evaluate(this, tmp.get(statics) || (tmp.set(statics, tmp = build(statics)), tmp), arguments, []);\n  return tmp.length > 1 ? tmp : tmp[0];\n};\n\nconst custom = function() {\n  const result = (MINI ? build : regular).apply(this, arguments);\n  if (result) {\n    return Array.isArray(result)\n      ? this(result)\n      : typeof result === 'object'\n      ? result\n      : this([result]);\n  }\n};\n\nconst wrapper = function() {\n  const h = custom.bind(this);\n  return (this.wrap || h).apply(h, arguments);\n};\n\nexport default wrapper;\n","import { MINI } from './constants.js';\n\nconst MODE_SLASH = 0;\nconst MODE_TEXT = 1;\nconst MODE_WHITESPACE = 2;\nconst MODE_TAGNAME = 3;\nconst MODE_COMMENT = 4;\nconst MODE_PROP_SET = 5;\nconst MODE_PROP_APPEND = 6;\n\nconst TAG_SET = 1;\nconst CHILD_APPEND = 0;\nconst CHILD_RECURSE = 2;\nconst PROPS_ASSIGN = 3;\nconst PROP_SET = MODE_PROP_SET;\nconst PROP_APPEND = MODE_PROP_APPEND;\n\n// Turn a result of a build(...) call into a tree that is more\n// convenient to analyze and transform (e.g. Babel plugins).\n// For example:\n//  treeify(\n//    build'<div href=\"1${a}\" ...${b}><${x} /></div>`,\n//    [X, Y, Z]\n//  )\n// returns:\n//  {\n//    tag: 'div',\n//    props: [ { href: [\"1\", X] },  Y ],\n//    children: [ { tag: Z, props: [], children: [] } ]\n//  }\nexport const treeify = (built, fields) => {\n  const _treeify = built => {\n    let tag = '';\n    let currentProps = null;\n    const props = [];\n    const children = [];\n\n    for (let i = 1; i < built.length; i++) {\n      const field = built[i++];\n      const value = typeof field === 'number' ? fields[field - 1] : field;\n\n      if (built[i] === TAG_SET) {\n        tag = value;\n      }\n      else if (built[i] === PROPS_ASSIGN) {\n        props.push(value);\n        currentProps = null;\n      }\n      else if (built[i] === PROP_SET) {\n        if (!currentProps) {\n          currentProps = Object.create(null);\n          props.push(currentProps);\n        }\n        currentProps[built[++i]] = [value];\n      }\n      else if (built[i] === PROP_APPEND) {\n        currentProps[built[++i]].push(value);\n      }\n      else if (built[i] === CHILD_RECURSE) {\n        children.push(_treeify(value));\n      }\n      else if (built[i] === CHILD_APPEND) {\n        children.push(value);\n      }\n    }\n\n    return { tag, props, children };\n  };\n  const { children } = _treeify(built);\n  return children.length > 1 ? children : children[0];\n};\n\n\nexport const evaluate = (h, built, fields, args) => {\n  let propBody = {};\n  for (let i = 1; i < built.length; i++) {\n    const field = built[i];\n    const value = typeof field === 'number' ? fields[field] : field;\n    const type = built[++i];\n\n    if (type === TAG_SET) {\n      args[0] = value;\n    }\n    else if (type === PROPS_ASSIGN) {\n      args[1] = Object.assign(args[1] || {}, value);\n    }\n    else if (type === PROP_SET) {\n      (args[1] = args[1] || {})[built[++i]] = value;\n    }\n    else if (type === PROP_APPEND) {\n      let key = built[++i];\n      let prev = (args[1] = args[1] || {})[key];\n      let parts = propBody[key];\n\n      if (!parts && (typeof value === 'function' || typeof prev === 'function')) {\n        parts = (prev && [prev]) || [];\n\n        args[1][key] = function() {\n          let prop = '';\n          for (var j = 0; j < parts.length; j++) {\n            prop += typeof parts[j] === 'function' ? parts[j].call(this) : parts[j];\n          }\n          return prop;\n        };\n      }\n\n      if (parts) {\n        parts.push(value);\n      } else {\n        args[1][key] += (value + '');\n      }\n    }\n    else if (type) {\n      // code === CHILD_RECURSE\n      const result = () => h.apply(null, evaluate(h, value, fields, ['', null]));\n\n      // if it's a component we pass the children with closure so the\n      // component is executed before the children of that component.\n      args.push(typeof args[0] === 'function' ? result : result());\n    }\n    else {\n      // code === CHILD_APPEND\n      args.push(value);\n    }\n  }\n\n  return args;\n};\n\nexport const build = function(statics) {\n  const fields = arguments;\n  const h = this;\n\n  let mode = MODE_TEXT;\n  let buffer = '';\n  let quote = '';\n  let current = [0];\n  let char, propName;\n\n  const commit = field => {\n    if (mode === MODE_TEXT && (field || (buffer = buffer.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,'')))) {\n      if (MINI) {\n        current.push(field ? fields[field] : buffer);\n      }\n      else {\n        current.push(field || buffer, CHILD_APPEND);\n      }\n    }\n    else if (mode === MODE_TAGNAME && (field || buffer)) {\n      if (MINI) {\n        current[1] = field ? fields[field] : buffer;\n      }\n      else {\n        current.push(field || buffer, TAG_SET);\n      }\n      mode = MODE_WHITESPACE;\n    }\n    else if (mode === MODE_WHITESPACE && buffer === '...' && field) {\n      if (MINI) {\n        current[2] = Object.assign(current[2] || {}, fields[field]);\n      }\n      else {\n        current.push(field, PROPS_ASSIGN);\n      }\n    }\n    else if (mode === MODE_WHITESPACE && buffer && !field) {\n      if (MINI) {\n        (current[2] = current[2] || {})[buffer] = true;\n      }\n      else {\n        current.push(true, PROP_SET, buffer);\n      }\n    }\n    else if (mode >= MODE_PROP_SET) {\n      if (MINI) {\n        if (mode === MODE_PROP_SET) {\n          (current[2] = current[2] || {})[propName] = field ? buffer ? (buffer + fields[field]) : fields[field] : buffer;\n          mode = MODE_PROP_APPEND;\n        }\n        else if (field || buffer) {\n          current[2][propName] += field ? buffer + fields[field] : buffer;\n        }\n      }\n      else {\n        if (buffer || (!field && mode === MODE_PROP_SET)) {\n          current.push(buffer, mode, propName);\n          mode = MODE_PROP_APPEND;\n        }\n        if (field) {\n          current.push(field, mode, propName);\n          mode = MODE_PROP_APPEND;\n        }\n      }\n    }\n\n    buffer = '';\n  };\n\n  for (let i=0; i<statics.length; i++) {\n    if (i) {\n      if (mode === MODE_TEXT) {\n        commit();\n      }\n      commit(i);\n    }\n\n    for (let j=0; j<statics[i].length;j++) {\n      char = statics[i][j];\n\n      if (mode === MODE_TEXT) {\n        if (char === '<') {\n          // commit buffer\n          commit();\n          if (MINI) {\n            current = [current, '', null];\n          }\n          else {\n            current = [current];\n          }\n          mode = MODE_TAGNAME;\n        }\n        else {\n          buffer += char;\n        }\n      }\n      else if (mode === MODE_COMMENT) {\n        // Ignore everything until the last three characters are '-', '-' and '>'\n        if (buffer === '--' && char === '>') {\n          mode = MODE_TEXT;\n          buffer = '';\n        }\n        else {\n          buffer = char + buffer[0];\n        }\n      }\n      else if (quote) {\n        if (char === quote) {\n          quote = '';\n        }\n        else {\n          buffer += char;\n        }\n      }\n      else if (char === '\"' || char === \"'\") {\n        quote = char;\n      }\n      else if (char === '>') {\n        commit();\n        mode = MODE_TEXT;\n      }\n      else if (!mode) {\n        // Ignore everything until the tag ends\n      }\n      else if (char === '=') {\n        mode = MODE_PROP_SET;\n        propName = buffer;\n        buffer = '';\n      }\n      else if (char === '/' && (mode < MODE_PROP_SET || statics[i][j+1] === '>')) {\n        commit();\n        if (mode === MODE_TAGNAME) {\n          current = current[0];\n        }\n        mode = current;\n        if (MINI) {\n          (current = current[0]).push(h.apply(null, mode.slice(1)));\n        }\n        else {\n          (current = current[0]).push(mode, CHILD_RECURSE);\n        }\n        mode = MODE_SLASH;\n      }\n      else if (char === ' ' || char === '\\t' || char === '\\n' || char === '\\r') {\n        // <a disabled>\n        commit();\n        mode = MODE_WHITESPACE;\n      }\n      else {\n        buffer += char;\n      }\n\n      if (mode === MODE_TAGNAME && buffer === '!--') {\n        mode = MODE_COMMENT;\n        current = current[0];\n      }\n    }\n  }\n  commit();\n\n  if (MINI) {\n    return current.length > 2 ? current.slice(1) : current[1];\n  }\n  return current;\n};\n","/* Adapted from DOM Expressions - The MIT License - Ryan Carniato */\nimport { add } from './add.js';\nimport { insert } from './insert.js';\nimport { property } from './property.js';\nimport { api } from './api.js';\n\napi.insert = insert;\napi.property = property;\napi.add = add;\n\nexport { context } from './h.js';\nexport { api };\n","/*\n * @param {object} api\n * @param {Function} [api.subscribe] - Function that listens to state changes.\n * @param {Function} [api.cleanup] - Add the given function to the cleanup stack.\n */\nexport const api = {};\n","export const EMPTY_ARR = [];\nexport const GROUPING = '__g';\n","import { api } from './api.js';\nimport { EMPTY_ARR, GROUPING } from './constants.js';\n\nlet groupCounter = 0;\n\nexport function add(parent, value, endMark) {\n  let mark;\n\n  if (typeof value === 'string') {\n    value = document.createTextNode(value);\n  } else if (!(value instanceof Node)) {\n    // Passing an empty array creates a DocumentFragment.\n    value = api.h(EMPTY_ARR, value);\n  }\n\n  if (\n    value.nodeType === 11 &&\n    (mark = value.firstChild) &&\n    mark !== value.lastChild\n  ) {\n    mark[GROUPING] = value.lastChild[GROUPING] = ++groupCounter;\n  }\n\n  // If endMark is `null`, value will be added to the end of the list.\n  parent.insertBefore(value, endMark);\n\n  // Explicit undefined to store if frag.firstChild is null.\n  return mark === undefined ? value : mark;\n}\n","import { api } from './api.js';\n\nexport function property(el, value, name, isAttr, isCss) {\n  if (value == null) return;\n  if (!name || (name === 'attrs' && (isAttr = true))) {\n    for (name in value) {\n      api.property(el, value[name], name, isAttr, isCss);\n    }\n  } else if (name[0] === 'o' && name[1] === 'n' && !value.$o) {\n    // Functions added as event handlers are not executed\n    // on render unless they have an observable indicator.\n    handleEvent(el, name, value);\n  } else if (typeof value === 'function') {\n    api.subscribe(function setProperty() {\n      api.property(el, value.call({ el, name }), name, isAttr, isCss);\n    });\n  } else if (isCss) {\n    el.style.setProperty(name, value);\n  } else if (\n    isAttr ||\n    name.slice(0, 5) === 'data-' ||\n    name.slice(0, 5) === 'aria-'\n  ) {\n    el.setAttribute(name, value);\n  } else if (name === 'style') {\n    if (typeof value === 'string') {\n      el.style.cssText = value;\n    } else {\n      api.property(el, value, null, isAttr, true);\n    }\n  } else {\n    if (name === 'class') name += 'Name';\n    el[name] = value;\n  }\n}\n\nfunction handleEvent(el, name, value) {\n  name = name.slice(2).toLowerCase();\n\n  if (value) {\n    el.addEventListener(name, eventProxy);\n  } else {\n    el.removeEventListener(name, eventProxy);\n  }\n\n  (el._listeners || (el._listeners = {}))[name] = value;\n}\n\n/**\n * Proxy an event to hooked event handlers.\n * @param {Event} e - The event object from the browser.\n * @return {Function}\n */\nfunction eventProxy(e) {\n  // eslint-disable-next-line\n  return this._listeners[e.type](e);\n}\n","/* Adapted from Hyper DOM Expressions - The MIT License - Ryan Carniato */\nimport { api } from './api.js';\nimport { add } from './add.js';\n\n/**\n * Create a sinuous `h` tag aka hyperscript.\n * @param {object} options\n * @param  {boolean} isSvg\n * @return {Function} `h` tag.\n */\nexport function context(options, isSvg) {\n  for (let i in options) api[i] = options[i];\n\n  function h() {\n    const args = Array.from(arguments);\n    let el;\n\n    function item(arg) {\n      if (arg == null);\n      else if (typeof arg === 'string') {\n        if (el) {\n          add(el, arg);\n        } else {\n          if (isSvg) {\n            el = document.createElementNS('http://www.w3.org/2000/svg', arg);\n          } else {\n            el = document.createElement(arg);\n          }\n        }\n      } else if (Array.isArray(arg)) {\n        // Support Fragments\n        if (!el) el = document.createDocumentFragment();\n        arg.forEach(item);\n      } else if (arg instanceof Node) {\n        if (el) {\n          add(el, arg);\n        } else {\n          // Support updates\n          el = arg;\n        }\n      } else if (typeof arg === 'object') {\n        api.property(el, arg, null, isSvg);\n      } else if (typeof arg === 'function') {\n        if (el) {\n          const endMark = add(el, '');\n          api.insert(el, arg, endMark);\n        } else {\n          // Support Components\n          el = arg.apply(null, args.splice(1));\n        }\n      } else {\n        add(el, '' + arg);\n      }\n    }\n\n    args.forEach(item);\n    return el;\n  }\n\n  return h;\n}\n","import {app} from './app'\n\ndocument.querySelector('#root').append(app())","import { api } from './api.js';\nimport { add } from './add.js';\nimport { clear } from './clear.js';\n\nexport function insert(el, value, endMark, current, startNode) {\n  // This is needed if the el is a DocumentFragment initially.\n  el = (endMark && endMark.parentNode) || el;\n\n  // Save startNode of current. In clear() endMark.previousSibling\n  // is not always accurate if content gets pulled before clearing.\n  startNode = startNode || current instanceof Node && current;\n\n  if (value === current);\n  else if (\n    (!current || typeof current === 'string') &&\n    (typeof value === 'string' || (typeof value === 'number' && (value += '')))\n  ) {\n    // Block optimized for string insertion.\n    if (current == null || !el.firstChild) {\n      if (endMark) {\n        add(el, value, endMark);\n      } else {\n        // textContent is a lot faster than append -> createTextNode.\n        el.textContent = value;\n      }\n    } else {\n      if (endMark) {\n        (endMark.previousSibling || el.lastChild).data = value;\n      } else {\n        el.firstChild.data = value;\n      }\n    }\n    current = value;\n  } else if (typeof value === 'function') {\n    api.subscribe(function insertContent() {\n      current = api.insert(el, value.call({ el, endMark }), endMark, current, startNode);\n    });\n  } else {\n    // Block for nodes, fragments, Arrays, non-stringables and node -> stringable.\n    clear(el, current, endMark, startNode);\n    current = null;\n\n    if (value && value !== true) {\n      current = add(el, value, endMark);\n    }\n  }\n\n  return current;\n}\n","import { GROUPING } from './constants.js';\n\n/**\n * Clear all nodes in the parent.\n * @param  {Node} parent\n * @param  {*} current\n * @param  {Node} endMark - This is the ending marker node.\n * @param  {Node} startNode - This is the start node.\n */\nexport function clear(parent, current, endMark, startNode) {\n  if (endMark) {\n    // `current` can't be `0`, it's coerced to a string in insert.\n    if (current) {\n      if (!startNode) {\n        startNode = endMark.previousSibling || parent.lastChild;\n        // Support fragments\n        const key = startNode[GROUPING];\n        if (key) {\n          startNode = startNode.previousSibling;\n          while (startNode && startNode[GROUPING] !== key) {\n            startNode = startNode.previousSibling;\n          }\n        }\n      }\n      let tmp;\n      while (startNode && startNode !== endMark) {\n        tmp = startNode.nextSibling;\n        // Is needed in case the child was pulled out the parent before clearing.\n        if (parent === startNode.parentNode) {\n          parent.removeChild(startNode);\n          startNode[GROUPING] = 0;\n        }\n        startNode = tmp;\n      }\n    }\n  } else {\n    parent.textContent = '';\n  }\n}\n","import {html} from 'sinuous'\n\nimport \"./card.css\";\n\nexport const card = ({ title }, ...children) => {\n  return html`\n    <section class=${\"card \" + title.replace(\" \", \"-\")}>\n      <h2>${title}</h2>\n      ${children}\n    </section>\n  `;\n};\n","import {html, o} from 'sinuous'\nimport {card} from '../components/card'\n\nimport \"./counter.css\";\n\nexport const counter = () => {\n  let count = o(0)\n\n  return html`\n    <${card} title=\"Counter\">\n      ${count}\n      <button onclick=${()=>count(count()+1)}>+</button>\n    <//>\n  `\n};","import { html, o } from \"sinuous\";\nimport { card } from \"../components/card\";\n\nimport \"./temperatureConverter.css\";\n\nfunction trunc(n) {\n  return Number(n.toFixed(2));\n}\n\nfunction remove0(n) {\n  if (/^0\\d+$/.test(n)) return n.slice(1);\n  if (/^-0\\d+$/.test(n)) return \"-\" + n.slice(2);\n  return n;\n}\n\nfunction getC(f) {\n  return trunc((5 / 9) * (f - 32)) || -17.78; // 0 F\n}\nfunction getF(c) {\n  return trunc((9 / 5) * c + 32) || 32; // 0 C\n}\nlet r = /^-?\\d*.?\\d*$/;\nfunction isValid(temp) {\n  if (/^-?\\d*$/.test(temp)) return true;\n  if (/^-?\\d+[.]?\\d*$/.test(temp)) return true;\n  return false;\n}\n\nexport const temperatureConverter = () => {\n  let c = o(0);\n  let f = o(32);\n\n  const updateFromC = e => update(e, c, f, getF);\n  const updateFromF = e => update(e, f, c, getC);\n\n  const update = (e, from, to, get) => {\n    let value = e.target.value; //|| \"0\";\n    if (!isValid(value)) return;\n    value = remove0(value)\n    from(value)\n    to(get(value))\n  };\n\n  return html`\n    <${card} title=\"Temperature Converter\">\n      <span>\n        <input value=${c} oninput=${updateFromC} />\n        Celsius\n      </span>\n      =\n      <span>\n        <input value=${f} oninput=${updateFromF} />\n        Fahrenheit\n      </span>\n    <//>\n  `;\n};\n","import { html, o } from \"sinuous\";\nimport { S } from \"sinuous/observable\";\nimport { card } from \"../components/card\";\nimport \"./flightBooker.css\";\n\nlet flightMap = {\n  1: \"one-way flight\",\n  2: \"return flight\"\n};\n\nfunction tryAsDate(dateString) {\n  let dateArr = dateString.split(\".\").reverse();\n  if (dateArr[1].length !== 2 || dateArr[2].length !== 2) {\n    return false;\n  }\n  let date = new Date(dateArr.join(\"-\"));\n  return date.valueOf() || false;\n}\n\nfunction formatAsString(date) {\n  return date\n    .toISOString()\n    .slice(0, 10)\n    .split(\"-\")\n    .reverse()\n    .join(\".\");\n}\n\nexport const flightBooker = () => {\n  let flightType = o(1);\n  let startDate = o(formatAsString(new Date()));\n  let returnDate = o(formatAsString(new Date()));\n\n  let error1 = S(() => !tryAsDate(startDate()));\n  let error2 = S(() => !tryAsDate(returnDate()));\n  let error3 = S(() => tryAsDate(returnDate()) < tryAsDate(startDate()));\n\n  let isBookButtonDisabled = S(() => error1() || error2() || error3());\n  let isOneWay = S(() => flightType() === 1);\n  let startDateClass = S(() => (error1() ? \"error\" : \"\"));\n  let returnDateClass = S(() => (error2() ? \"error\" : \"\"));\n\n  function book() {\n    let timeStrings = {\n      1: \" for \" + startDate(),\n      2: \" from \" + startDate() + \" to \" + returnDate()\n    };\n    alert(\n      \"You have booked a \" + flightMap[flightType()] + timeStrings[flightType()]\n    );\n  }\n\n  return html`\n    <${card} title=\"Flight Booker\">\n      <div>\n        <select value=${flightType} onchange=${e => flightType(e.target.value)}>\n          <option value=\"{1}\">${flightMap[1]}</option>\n          <option value=\"{2}\">${flightMap[2]}</option>\n        </select>\n        <input\n          value=${startDate}\n          class=${startDateClass}\n          oninput=${e => startDate(e.target.value)}\n        />\n        <input\n          value=${returnDate}\n          class=${returnDateClass}\n          oninput=${e => returnDate(e.target.value)}\n          disabled=${isOneWay}\n        />\n        <button onclick=${book} disabled=${isBookButtonDisabled}>\n          Book\n        </button>\n      </div>\n    <//>\n  `;\n};\n","import { html, o } from \"sinuous\";\nimport { S } from \"sinuous/observable\";\nimport { card } from \"../components/card\";\n\nimport \"./timer.css\";\n\nexport const timer = () => {\n  const MAX = 30000;\n\n  let duration = o(5000);\n  let durationFormatted = S(() => (duration() / 1000).toFixed(1));\n  let start = o();\n  let time = o();\n  let progress = S(() => (time() - start()) / duration());\n  let interval;\n\n  function createInterval() {\n    return setInterval(() => {\n      time(new Date().valueOf());\n    }, 10);\n  }\n  function startTimer() {\n    clearInterval(interval);\n    start(new Date().valueOf());\n    time(start());\n    interval = createInterval();\n  }\n\n  startTimer();\n\n  return html`\n    <${card} title=\"Timer\">\n      <div class=\"wrapper\">\n        Elapsed Time:\n        <progress value=${progress} />\n        <div class=\"duration\">${durationFormatted}s</div>\n        Duration:\n        <input\n          type=\"range\"\n          min=${0}\n          max=${MAX}\n          value=${duration}\n          oninput=${e => duration(e.target.value)}\n        />\n        <button onclick=${startTimer}>Reset Timer</button>\n      </div>\n    <//>\n  `;\n};\n","import { html, o } from \"sinuous\";\nimport { S, subscribe } from \"sinuous/observable\";\nimport { card } from \"../components/card\";\n\nimport \"./crud.css\";\n\nexport const crud = () => {\n  let prefix = o(\"\");\n  let entries = o([\n    o([\"Paul\", \"Atreides\"]),\n    o([\"Gurney\", \"Halleck\"]),\n    o([\"Duncan\", \"Idaho\"])\n  ]);\n  let filteredEntries = S(() =>\n    // get filtered entries in which entry[1] startsWith prefix\n    // get array of [entry[0], entry[1], index]  \n    entries()\n      .map((entry, i) => [entry()[0], entry()[1], i])\n      .filter(entry =>\n        entry[1].toLowerCase().startsWith(prefix().toLowerCase())\n      )\n  );\n  let name = o(\"\");\n  let surname = o(\"\");\n  let selected = o(-1)\n  subscribe(() => {prefix(); selected(-1)});\n\n  function createHandler() {\n    entries(entries().concat(o([name(), surname()])));\n  }\n  function updateHandler() {\n    // if selected > -1 then update entries[selected]\n    selected() > -1 && entries()[selected()]([name(), surname()]);\n  }\n  function deleteHandler() {\n    // if selected > -1 then delete entries[selected]\n    selected() > -1 && entries(entries().filter((entry, i) => i != selected()));\n  }\n\n  return html`\n    <${card} title=\"CRUD\">\n      <div class=\"wrapper\">\n        Filter prefix:\n        <input value=${prefix} oninput=${e => prefix(e.target.value)} />\n        <select\n          value=${selected}\n          oninput=${e => selected(e.target.value)}\n          size=\"4\"\n        >\n          ${() =>\n            filteredEntries().map(\n              entry => html`\n                <option value=${entry[2]}>${entry[1]}, ${entry[0]}</option>\n              `\n            )}\n        </select>\n        <div>\n          Name:\n          <input value=${name} oninput=${e => name(e.target.value)} />\n          Surname:\n          <input value=${surname} oninput=${e => surname(e.target.value)} />\n        </div>\n        <div class=\"buttons\">\n          <button onclick=${createHandler}>Create</button>\n          <button onclick=${updateHandler}>Update</button>\n          <button onclick=${deleteHandler}>Delete</button>\n        </div>\n      </div>\n    <//>\n  `;\n};\n","import { html, o, svg } from \"sinuous\";\nimport { subscribe, sample } from \"sinuous/observable\";\nimport { card } from \"../components/card\";\n\nimport \"./circleDrawer.css\";\n\nexport const circleDrawer = () => {\n  const BASE_RADIUS = 30;\n\n  let step = o(0);\n  let snapshots = o([o([])]);\n  let radius = o(BASE_RADIUS);\n  let resizing = o(false);\n  let present = o([]);\n  subscribe(() => present(snapshots()[step()]()));\n  subscribe(() => {\n    if (resizing()) {\n      let resizingIndex = sample(present).findIndex(\n        circle => circle.x === resizing().x && circle.y === resizing().y\n      );\n      let newPresent = sample(present).slice();\n      newPresent[resizingIndex] = {\n        ...sample(present)[resizingIndex],\n        r: Number(radius())\n      };\n      present(newPresent);\n    }\n  });\n\n  function handleRightClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    let circle = e.target;\n    resizing({\n      x: circle.cx.baseVal.value,\n      y: circle.cy.baseVal.value,\n      r: circle.r.baseVal.value\n    });\n    radius(resizing().r);\n  }\n\n  function addCircle(e) {\n    let x = e.layerX;\n    let y = e.layerY;\n    let newSnapshot = present().slice();\n    newSnapshot.push({ x, y, r: BASE_RADIUS });\n    addSnapshot(o(newSnapshot));\n  }\n\n  function addSnapshot(newSnapshot) {\n    let newSnapshots = snapshots().slice(0, step() + 1);\n    newSnapshots.push(newSnapshot);\n    snapshots(newSnapshots);\n    step(step() + 1);\n  }\n\n  function undo() {\n    step(Math.max(step() - 1, 0));\n  }\n\n  function redo() {\n    step(Math.min(step() + 1, snapshots().length - 1));\n  }\n\n  function endResize() {\n    if (radius() !== resizing().r) {\n      resizing(false);\n      radius(BASE_RADIUS);\n      addSnapshot(o(present().slice()));\n    }\n    resizing(false);\n  }\n\n  const overlay = () => html`\n    <div class=\"overlay\" onclick=${endResize}></div>\n    <div class=\"resizer\">\n      <p>\n        Adjust radius of circle at (${() => resizing().x},\n        ${() => resizing().y})\n      </p>\n      <p>${radius}</p>\n      <input\n        type=\"range\"\n        min=${0}\n        max=${100}\n        value=${radius}\n        oninput=${e => radius(e.target.value)}\n      />\n    </div>\n  `;\n\n  const circleSVG = ({ circle, handleRightClick }) => {\n    return svg`\n      <circle\n        cx=${circle.x}\n        cy=${circle.y}\n        r=${circle.r}\n        fill=\"white\"\n        stroke=\"black\"\n        onclick=${e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        oncontextmenu=${handleRightClick}\n      />\n    `;\n  };\n\n  const view = html`\n    <${card} title=\"Circle Drawer\">\n      <div class=\"wrapper\">\n        <div class=\"buttons\">\n          <button disabled=${() => !step()} onclick=${undo}>Undo</button>\n          <button\n            disabled=${() => step() === snapshots().length - 1}\n            onclick=${redo}\n          >\n            Redo\n          </button>\n        </div>\n        <div class=\"canvas\">\n          ${() => svg`\n            <svg onclick=${addCircle}>\n              ${() =>\n                present().map(\n                  cir =>\n                    html`\n                      <${circleSVG}\n                        circle=${cir}\n                        handleRightClick=${handleRightClick}\n                      />\n                    `\n                )}\n            </svg>\n          `}\n        </div>\n        ${() => resizing() && overlay}\n      </div>\n    <//>\n  `;\n\n  return view;\n};\n","export let sampleData = {\n  A0: 'Data',\n  A1: '20',\n  A2: '15',\n  A3: 'text',\n  B1: '79',\n  B2: '3.9',\n  A5: 'Formula',\n  B5: 'Output',\n  A6: '\"=sum(D1:D5)\"',\n  B6: '=sum(D1:D5)',\n  A7: '\"=sub(A1:B2)\"',\n  B7: '=sub(A1:B2)',\n  A8: '\"=mul(D1:D5)\"',\n  B8: '=mul(D1:D5)',\n  A9: '\"=div(A1:B2)\"',\n  B9: '=div(A1:B2)',\n  A10: '\"=mod(A1:B2)\"',\n  B10: '=mod(A1:B2)',\n  C0: 'Formula',\n  D0: 'Output',\n  C1: '\"=sum(A1,A2)\"',\n  D1: '=sum(A1,A2)',\n  C2: '\"=sub(D1,A1)\"',\n  D2: '=sub(D1,A1)',\n  C3: '\"=mul(D2,A2)\"',\n  D3: '=mul(D2,A2)',\n  C4: '\"=div(D3,A1)\"',\n  D4: '=div(D3,A1)',\n  C5: '\"=mod(A1,A2)\"',\n  D5: '=mod(A1,A2)',\n  C7: '\"=sum(A1,A3)\"',\n  D7: '=sum(A1,A3)',\n  C8: '\"=sum(A1,A4)\"',\n  D8: '=sum(A1,A4)',\n  C9: '\"=sumA1,A4)\"',\n  D9: '=sumA1,A4)',\n  C10: '\"=sm(A1,A4)\"',\n  D10: '=sm(A1,A4)',\n  C11: '\"=sum(A1,307)\"',\n  D11: '=sum(A1,307)',\n  C12: '\"=sum(159,4)\"',\n  D12: '=sum(159,4)',\n  C14: '\"=A1\"',\n  D14: '=A1',\n  C15: '\"=A3\"',\n  D15: '=A3'\n}\n","import {subscribe} from 'sinuous/observable'\n\nexport class Parser {\n  constructor(store, columns, rows) {\n    this.cells = {}\n    this.store = store\n    this.columns = columns\n    this.rows = rows\n    this.operations = {\n      sum: (a, b) => a + b,\n      sub: (a, b) => a - b,\n      mul: (a, b) => a * b,\n      div: (a, b) => a / b,\n      mod: (a, b) => a % b,\n      exp: (a, b) => a ** b\n    }\n\n    subscribe(() => this.cells = this.store())\n  }\n\n  cartesianProduct(letters, numbers) {\n    var result = []\n    letters.forEach(letter => {\n      numbers.forEach(number => {\n        result.push(letter + number)\n      })\n    })\n    return result\n  }\n\n  findArrRange(arr, start, end) {\n    let startI = arr.indexOf(start)\n    let endI = arr.indexOf(end)\n    if (startI == -1 || endI == -1 || startI > endI) return []\n    return arr.slice(startI, endI + 1)\n  }\n\n  getRange(rangeStart, rangeEnd) {\n    rangeStart = this.splitOperand(rangeStart)\n    rangeEnd = this.splitOperand(rangeEnd)\n    let letters = this.findArrRange(this.columns, rangeStart[0], rangeEnd[0])\n    let numbers = this.findArrRange(this.rows, rangeStart[1], rangeEnd[1])\n    return this.cartesianProduct(letters, numbers)\n  }\n\n  splitOperand(operand) {\n    return [operand.match(/[a-zA-Z]+/)[0], Number(operand.match(/\\d+/)[0])]\n  }\n\n  rangeOperation(op, rangeStart, rangeEnd) {\n    if (!(this.isWellFormed(rangeStart) && this.isWellFormed(rangeEnd)))\n      return this.originalString\n\n    let range = this.getRange(rangeStart, rangeEnd)\n\n    return range\n      .map(address => Number(this.parse(this.cells[address]())))\n      .reduce(this.operations[op])\n  }\n\n  singleOperation(op, operand1, operand2) {\n    let first = this.parseOperand(operand1)\n    let second = this.parseOperand(operand2)\n\n    if (first === null || second === null) return this.originalString\n\n    return this.operations[op](first, second).toString()\n  }\n\n  isWellFormed(operand) {\n    return /[a-zA-Z]+\\d+/.test(operand)\n  }\n\n  parseOperand(operand) {\n    if (!isNaN(Number(operand))) return Number(operand)\n    if (operand in this.cells) return Number(this.parse(this.cells[operand]()))\n    if (this.isWellFormed(operand)) return 0\n\n    return null\n  }\n\n  parseOperation(op, formula) {\n    if (!(formula.startsWith('(') && formula.endsWith(')')))\n      return this.originalString\n\n    formula = formula.slice(1, formula.length - 1)\n\n    let operationType\n    let formulaArr\n    if (formula.includes(',')) {\n      operationType = 'single'\n      formulaArr = formula.split(',')\n    } else if (formula.includes(':')) {\n      operationType = 'range'\n      formulaArr = formula.split(':')\n    }\n\n    if (formulaArr.length !== 2) return this.originalString\n\n    if (operationType === 'single')\n      return this.singleOperation(op, formulaArr[0], formulaArr[1])\n\n    if (operationType === 'range')\n      return this.rangeOperation(op, formulaArr[0], formulaArr[1])\n\n    return this.originalString\n  }\n\n  parse(str) {\n    this.originalString = str\n    if (typeof str !== 'string') return ''\n    if (!str.startsWith('=')) return str\n\n    let formula = str.slice(1)\n    if (formula.slice(0, 3).toLowerCase() in this.operations) {\n      return this.parseOperation(\n        formula.slice(0, 3).toLowerCase(),\n        formula.slice(3).toUpperCase()\n      )\n    } else {\n      return this.cells[formula] || str\n    }\n  }\n}\n","import { html, o } from \"sinuous\";\nimport { sample, subscribe } from \"sinuous/observable\";\nimport { card } from \"../../components/card\";\nimport { sampleData } from \"./sampleData.js\";\nimport { Parser } from \"./parse.js\";\n\nimport \"./cells.css\";\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nfunction range(n) {\n  return [...Array(n).keys()];\n}\nfunction letterRange(n) {\n  return range(n).map(getNumberAsLetters);\n}\nfunction getBase26(n) {\n  let result = [];\n  while (n > 25) {\n    let remainder = n % 26;\n    result.push(remainder);\n    n = Math.floor(n / 26) - 1;\n  }\n  result.push(n);\n  return result.reverse();\n}\nfunction getNumberAsLetters(n) {\n  let arr = getBase26(n);\n  return arr.map((num) => LETTERS[num]).join(\"\");\n}\nfunction findAdjacent(arr, value, direction) {\n  let index = arr.indexOf(value);\n  if (index === -1) return null;\n  if (direction === \"before\")\n    return arr[index - 1] === undefined ? null : arr[index - 1];\n  if (direction === \"after\") return arr[index + 1] || null;\n  return null;\n}\n\nexport const cells = (props) => {\n  let shape = (props && props.shape) || [100, 100];\n\n  Object.keys(sampleData).forEach((key) => {\n    // Make each entry an observable\n    sampleData[key] = o(sampleData[key]);\n  });\n  const data = o(sampleData);\n\n  const rows = range(shape[1]);\n  const columns = letterRange(shape[0]);\n  const p = new Parser(data, columns, rows);\n\n  let focused = o(undefined);\n  let tBody; // Used as a ref\n\n  function createNewCell(key) {\n    let dataRef = sample(data);\n    if (!dataRef[key]) {\n      dataRef[key] = o(\"\");\n      data(dataRef);\n    }\n  }\n\n  function handleFocus(key) {\n    if (focused() !== key) {\n      createNewCell(key);\n      focused(key);\n      let target = tBody.querySelector(\"#input-\" + key);\n      if (target) {\n        target.focus();\n        target.setSelectionRange(0, 9999);\n      }\n    }\n  }\n\n  function handleBlur(key) {\n    if (focused() === key) focused(undefined);\n  }\n\n  function handleInput(e, key) {\n    sample(data)[key](e.target.value);\n  }\n\n  function handleKeydown(e, column, row) {\n    // Navigate across the spreadsheet with arrow keys (and alt/option key)\n    let selector;\n    if (e.key === \"ArrowUp\") {\n      let newRow = findAdjacent(rows, row, \"before\");\n      selector = newRow !== null ? column + newRow : null;\n    }\n    if (e.key === \"ArrowDown\" || e.key === \"Enter\") {\n      let newRow = findAdjacent(rows, row, \"after\");\n      selector = newRow !== null ? column + newRow : null;\n    }\n    if (e.key === \"ArrowLeft\" && e.altKey) {\n      let newColumn = findAdjacent(columns, column, \"before\");\n      selector = newColumn !== null ? newColumn + row : null;\n    }\n    if (e.key === \"ArrowRight\" && e.altKey) {\n      let newColumn = findAdjacent(columns, column, \"after\");\n      selector = newColumn !== null ? newColumn + row : null;\n    }\n\n    if (selector) {\n      e.preventDefault();\n      handleFocus(selector);\n    }\n  }\n\n  function clear() {\n    data({});\n  }\n\n  const cellView = ({ j, i }) => {\n    let key = j + i;\n    let hasFocus = o(false);\n\n    subscribe(() => {\n      if (focused() === key && !sample(hasFocus)) {\n        hasFocus(true);\n      } else if (focused() !== key && sample(hasFocus)) {\n        hasFocus(false);\n      }\n    });\n\n    return html` ${() =>\n      hasFocus()\n        ? html`\n            <input\n              id=${\"input-\" + key}\n              autofocus\n              value=${() => (key in data() ? data()[key]() : \"\")}\n              onfocus=${() => handleFocus(key)}\n              onblur=${() => handleBlur(key)}\n              onkeydown=${(e) => handleKeydown(e, j, i)}\n              oninput=${(e) => handleInput(e, key)}\n            />\n          `\n        : html`\n            <div>${() => (key in data() ? p.parse(data()[key]()) : \"\")}</div>\n          `}`;\n  };\n\n  const view = html`\n    <${card} title=\"Cells\">\n      <div class=\"wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <td class=\"row-key\"></td>\n              ${() =>\n                columns.map(\n                  (column) => html` <td class=\"column-key\">${column}</td> `\n                )}\n            </tr>\n          </thead>\n          <tbody>\n            ${() =>\n              rows.map(\n                (i) => html`\n                  <tr id=${\"row-\" + i}>\n                    <td class=\"row-key\">${i}</td>\n                    ${() =>\n                      columns.map(\n                        (j) => html`\n                          <td id=${j + i} onclick=${() => handleFocus(j + i)}>\n                            <${cellView} j=${j} i=${i} />\n                          </td>\n                        `\n                      )}\n                  </tr>\n                `\n              )}\n          </tbody>\n        </table>\n      </div>\n      <button onclick=${clear}>Clear</button>\n    <//>\n  `;\n\n  tBody = view.querySelector(\"tbody\"); // Assign ref to domNode\n\n  return view;\n};\n","import {html} from 'sinuous'\nimport './app.css'\n\nimport {counter} from './tasks/counter'\nimport {temperatureConverter} from './tasks/temperatureConverter'\nimport {flightBooker} from './tasks/flightBooker'\nimport {timer} from './tasks/timer'\nimport {crud} from './tasks/crud'\nimport {circleDrawer} from './tasks/circleDrawer'\nimport {cells} from './tasks/cells/cells'\n\nexport const app = () => {\n  return html`\n    <main className=\"App\">\n      <a href=\"../../index.html\">Home</a>\n\n      <${counter} />\n      <${temperatureConverter} />\n      <${flightBooker} />\n      <${timer} />\n      <${crud} />\n      <${circleDrawer} />\n      <${cells} />\n    </main>\n  `;\n} ","import {app} from './app'\n\ndocument.querySelector('#root').append(app())"]}