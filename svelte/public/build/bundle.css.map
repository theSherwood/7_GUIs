{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../flightBooker.svelte",
    "../../counter.svelte",
    "../../crud.svelte",
    "../../timer.svelte",
    "../../circleDrawer.svelte",
    "../../TemperatureConverter.svelte",
    "../../cells.svelte",
    "../../card.svelte",
    "../../cell.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Counter from './tasks/counter.svelte'\n\timport TemperatureConverter from './tasks/TemperatureConverter.svelte'\n\timport FlightBooker from './tasks/flightBooker.svelte'\n\timport Timer from './tasks/timer.svelte'\n\timport Crud from './tasks/crud.svelte'\n\timport CircleDrawer from './tasks/circleDrawer.svelte'\n\timport Cells from './tasks/cells/cells.svelte'\n</script>\n\n<main>\n\t<a href=\"../../index.html\">Home</a>\n\n\t<Counter />\n\t<TemperatureConverter />\n\t<FlightBooker />\n\t<Timer />\n\t<Crud />\n\t<CircleDrawer />\n\t<Cells />\n</main>\n\n<style>\n\tmain {\n\t\tmax-width: 800px;\n\t\tmargin: auto;\n\t}\n</style>",
    "<script>\n  import Card from \"../components/card.svelte\";\n\n  let flightMap = {\n    1: \"one-way flight\",\n    2: \"return flight\"\n  };\n\n  let flightType = 1;\n  let startDate = formatAsString(new Date());\n  let returnDate = formatAsString(new Date());\n\n  $: error1 = !tryAsDate(startDate);\n  $: error2 = !tryAsDate(returnDate);\n  $: error3 = tryAsDate(returnDate) < tryAsDate(startDate);\n\n  function formatAsString(date) {\n    return date\n      .toISOString()\n      .slice(0, 10)\n      .split(\"-\")\n      .reverse()\n      .join(\".\");\n  }\n\n  function tryAsDate(dateString) {\n    let dateArr = dateString.split(\".\").reverse();\n    if (dateArr[1].length !== 2 || dateArr[2].length !== 2) {\n      return false;\n    }\n    let date = new Date(dateArr.join(\"-\"));\n    return date.valueOf() || false;\n  }\n\n  function book() {\n    let timeStrings = {\n      1: \" for \" + startDate,\n      2: \" from \" + startDate + \" to \" + returnDate\n    };\n    alert(\n      \"You have booked a \" + flightMap[flightType] + timeStrings[flightType]\n    );\n  }\n</script>\n\n<Card title=\"Flight Booker\">\n  <div>\n    <select bind:value={flightType}>\n      <option value={1}>{flightMap[1]}</option>\n      <option value={2}>{flightMap[2]}</option>\n    </select>\n    <input bind:value={startDate} class:error={error1} />\n    <input\n      bind:value={returnDate}\n      class:error={error2}\n      disabled={flightType === 1} />\n    <button on:click={book} disabled={error1 || error2 || error3}>Book</button>\n  </div>\n</Card>\n\n<style>\n  div {\n    max-width: 400px;\n    margin: auto;\n  }\n\n  div > * {\n    width: 100%;\n    display: block;\n  }\n\n  :disabled {\n    background: #eee;\n  }\n\n  .error {\n    background: #dd9999;\n  }\n</style>",
    "<script>\n  import Card from \"../components/card.svelte\";\n\n  let count = 0;\n</script>\n\n<Card title=\"Counter\">\n  {count}\n  <button on:click={() => count++}>+</button>\n</Card>\n\n<style>\n  button {\n    margin-left: 15px;\n  }\n</style>",
    "<script>\n  import Card from \"../components/card.svelte\";\n\n  let prefix = ''\n  let entries = [\n    ['Paul', 'Atreides'],\n    ['Gurney', 'Halleck'],\n    ['Duncan', 'Idaho']\n  ]\n  $: filteredEntries = entries.filter(\n    entry => entry[1].toLowerCase().startsWith(prefix.toLowerCase())\n  )\n  let selected = 0\n  let name = ''\n  let surname = ''\n\n  function createHandler() {\n    entries.push([name, surname])\n    entries = entries\n  }\n  function updateHandler() {\n    entries[selected] = [name, surname]\n    entries = entries\n  }\n  function deleteHandler() {\n    entries = entries.filter((entry, i) => i != selected)\n  }\n</script>\n\n<Card title=\"CRUD\">\n  <div class=\"wrapper\">\n    Filter prefix: \n    <input bind:value={prefix} />\n    <select bind:value={selected} size='4'>\n      {#each filteredEntries as entry, i}\n        <option value={i}>{entry[1]}, {entry[0]}</option>\n      {/each}\n    </select>\n    <div>\n      Name:\n      <input bind:value={name} />\n      Surname:\n      <input bind:value={surname} />\n    </div>\n    <div class=\"buttons\">\n      <button on:click={createHandler}>Create</button>\n      <button on:click={updateHandler}>Update</button>\n      <button on:click={deleteHandler}>Delete</button>\n    </div>\n  </div>\n</Card>\n\n<style>\n  .wrapper {\n    max-width: 400px;\n    text-align: left;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 150px auto;\n    grid-template-rows: auto;\n    grid-gap: 10px 10px;\n    grid-auto-flow: row;\n  }\n\n  .buttons {\n    grid-column: 1/3;\n    display: flex;\n    justify-content: space-evenly;\n  }\n\n  button {\n    flex: 1 1 0%;\n  }\n\n  input {\n    width: 100%;\n  }\n</style>",
    "<script>\n  import Card from \"../components/card.svelte\";\n\n  const MAX = 30000;\n\n  let duration = 5000;\n  let start;\n\n  let time;\n  let interval;\n  function createInterval() {\n    return setInterval(() => {\n      time = new Date().valueOf();\n    }, 10);\n  }\n  function startTimer() {\n    clearInterval(interval)\n    start = new Date().valueOf();\n    time = start;\n    interval = createInterval();\n  }\n\n  startTimer();\n</script>\n\n<Card title=\"Timer\">\n  <div class=\"wrapper\">\n    Elapsed Time:\n    <progress value={(time-start)/duration} />\n    <div class=\"duration\">{(duration / 1000).toFixed(1)}s</div>\n    Duration:\n    <input type=\"range\" min={0} max={MAX} bind:value={duration} />\n    <button on:click={startTimer}>Reset Timer</button>\n  </div>\n</Card>\n\n<style>\n  .wrapper {\n    max-width: 400px;\n    text-align: left;\n    margin: auto;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    grid-gap: 10px 10px;\n    grid-auto-flow: row;\n  }\n\n  input {\n    padding: 0;\n    justify-self: stretch;\n    align-self: center;\n  }\n\n  button {\n    grid-column: 1/3;\n    grid-row: auto;\n  }\n\n  .duration {\n    grid-column: 2;\n  }\n</style>",
    "<script>\n  import Card from \"../components/card.svelte\";\n\n  const BASE_RADIUS = 30\n\n  let step = 0\n  let snapshots = [[]]\n  let radius = BASE_RADIUS\n  let resizing = false\n  $: present = snapshots[step]\n  $: if (resizing) {\n    let resizingIndex = present.findIndex(circle => circle.x === resizing.x && circle.y === resizing.y)\n    let newPresent = present.slice()\n    newPresent[resizingIndex] = {...present[resizingIndex], r: radius}\n    present = newPresent\n  }\n\n  function handleRightClick(e) {\n    let circle = e.target\n    resizing = {\n      x: circle.cx.baseVal.value, \n      y: circle.cy.baseVal.value,\n      r: circle.r.baseVal.value\n    }\n    radius = resizing.r\n  }\n\n  function addCircle(e) {\n    let x = e.layerX\n    let y = e.layerY\n    let newSnapshot = present.slice()\n    newSnapshot.push({x,y,r: BASE_RADIUS})\n    addSnapshot(newSnapshot)\n  }\n\n  function addSnapshot(newSnapshot) {\n    let newSnapshots = snapshots.slice(0, step+1)\n    newSnapshots.push(newSnapshot)\n    snapshots = newSnapshots\n    step++\n  }\n\n  function undo() {\n    step = Math.max(step - 1, 0)\n  }\n\n  function redo() {\n    step = Math.min(step + 1, snapshots.length - 1)\n  }\n\n  function endResize() {\n    if (radius !== resizing.r) {\n      radius = BASE_RADIUS\n      addSnapshot(present.slice())\n    }\n    resizing = false\n  }\n</script>\n\n<Card title=\"Circle Drawer\">\n  <div class=\"wrapper\">\n    <div class=\"buttons\">\n      <button disabled={!step} on:click={undo}>Undo</button>\n      <button disabled={step === snapshots.length-1} on:click={redo}>Redo</button>\n    </div>\n    <div class=\"canvas\">\n      <svg on:click={addCircle}>\n        {#each present as circle (circle.x + ',' + circle.y)}\n          <circle \n            cx={circle.x} \n            cy={circle.y} \n            r={circle.r} \n            fill=\"white\" \n            stroke=\"black\"\n            on:click|stopPropagation|preventDefault={()=>{}}   \n            on:contextmenu|stopPropagation|preventDefault={handleRightClick}   \n          />\n        {/each}\n      </svg>\n    </div>\n\n    {#if resizing}\n      <div class=\"overlay\" on:click={endResize}></div>\n      <div class=\"resizer\">\n        <p>Adjust radius of circle at ({resizing.x}, {resizing.y})</p>\n        <p>{radius}</p>\n        <input type=\"range\" min={0} max={100} bind:value={radius} />\n      </div>\n    {/if}\n  </div>\n</Card>\n\n<style>\n  .wrapper {\n    max-width: 400px;\n    text-align: left;\n    margin: auto;\n    position: relative;\n  }\n\n  .canvas {\n    width: 100%;\n    height: 400px;\n    position: relative;\n  }\n\n  .overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: transparent;\n  }\n\n  .resizer {\n    background: rgba(200,200,200,.5);\n    position: absolute;\n    top: 50%;\n    left: 20px;\n    right: 20px;\n    transform: translateY(-50%);\n    text-align: center;\n  }\n\n  .buttons {\n    margin: auto;\n    width: max-content;\n  }\n\n  svg {\n    background: white;\n    width: 100%;\n    height: 100%;\n  }\n\n  circle:hover {\n    fill: #eee;\n  }\n</style>",
    "<script>\n  import Card from '../components/card.svelte'\n\n  let c = 0\n  let f\n\n  function trunc(n) {\n    return Number(n.toFixed(2))\n  }\n  function updateC() {\n    f = Number(f) || 0\n    c = trunc((5/9) * (f - 32))\n  }\n  function updateF() {\n    c = Number(c) || 0 \n    f = trunc(((9/5) * c) + 32)\n  }\n\n  updateF()\n</script>\n\n<Card title=\"Temperature Converter\">\n  <span><input bind:value={c} on:input={updateF}/> Celsius</span>\n  =\n  <span><input bind:value={f} on:input={updateC}/> Fahrenheit</span>\n</Card>\n\n<style>\n  span {\n    display: inline-block;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n</style>",
    "<script>\n  import Card from '../../components/card.svelte'\n  import Cell from './cell.svelte'\n  import { data } from './store.js'\n  import { sampleData } from './sampleData.js'\n  import { Parser } from './parse.js'\n  data.set(sampleData)\n\n  const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  export let shape = [100, 100]\n  const rows = range(shape[1])\n  const columns = letterRange(shape[0])\n  const p = new Parser(data, columns, rows)\n  let focused\n  let tBody\n\n  function range(n) {\n    return [...Array(n).keys()]\n  }\n\n  function letterRange(n) {\n    return range(n).map(getNumberAsLetters)\n  }\n\n  function getBase26(n) {\n    let result = []\n    while (n > 25) {\n      let remainder = n % 26\n      result.push(remainder)\n      n = Math.floor(n / 26) - 1\n    }\n    result.push(n)\n    return result.reverse()\n  }\n\n  function getNumberAsLetters(n) {\n    let arr = getBase26(n)\n    return arr.map((num) => LETTERS[num]).join('')\n  }\n\n  function handleFocus(key) {\n    if (focused !== key) {\n      $data[key] = $data[key] || ''\n      focused = key\n      setTimeout(() => {\n        let target = tBody.querySelector('#input-' + key)\n        if (target) {\n          target.focus()\n          target.setSelectionRange(0, 9999)\n        }\n      }, 10)\n    }\n  }\n\n  function handleBlur(key) {\n    if (focused === key) focused = undefined\n  }\n\n  function handleInput(e, key) {\n    $data[key] = e.target.value\n  }\n\n  function handleKeydown(e, column, row) {\n    // Navigate across the spreadsheet with arrow keys (and alt/option key)\n    let selector\n    if (e.key === 'ArrowUp') {\n      let newRow = findAdjacent(rows, row, 'before')\n      selector = newRow !== null ? column + newRow : null\n    }\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      let newRow = findAdjacent(rows, row, 'after')\n      selector = newRow !== null ? column + newRow : null\n    }\n    if (e.key === 'ArrowLeft' && e.altKey) {\n      let newColumn = findAdjacent(columns, column, 'before')\n      selector = newColumn !== null ? newColumn + row : null\n    }\n    if (e.key === 'ArrowRight' && e.altKey) {\n      let newColumn = findAdjacent(columns, column, 'after')\n      selector = newColumn !== null ? newColumn + row : null\n    }\n\n    if (selector) {\n      e.preventDefault()\n      handleFocus(selector)\n    }\n  }\n\n  function findAdjacent(arr, value, direction) {\n    let index = arr.indexOf(value)\n    if (index === -1) return null\n    if (direction === 'before')\n      return arr[index - 1] === undefined ? null : arr[index - 1]\n    if (direction === 'after') return arr[index + 1] || null\n    return null\n  }\n\n  function clear() {\n    data.set({})\n  }\n</script>\n\n<Card title=\"Cells\">\n  <div class=\"wrapper\">\n    <table>\n      <thead>\n        <tr>\n          <td class=\"row-key\" />\n          {#each columns as column}\n            <td class=\"column-key\">{column}</td>\n          {/each}\n        </tr>\n      </thead>\n      <tbody bind:this={tBody}>\n        {#each rows as i}\n          <tr id={'row-' + i}>\n            <td class=\"row-key\">{i}</td>\n            {#each columns as j}\n              <td id={j + i} on:click={() => handleFocus(j + i)}>\n                <Cell\n                  {j}\n                  {i}\n                  {focused}\n                  {data}\n                  {p}\n                  {handleFocus}\n                  {handleBlur}\n                  {handleKeydown}\n                  {handleInput}\n                />\n              </td>\n            {/each}\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n  <button on:click={clear}>Clear</button>\n</Card>\n\n<style>\n  .wrapper {\n    margin: auto;\n    overflow: scroll;\n    max-width: 600px;\n    max-height: 600px;\n    border: solid 1px #ddd;\n  }\n\n  table {\n    table-layout: fixed;\n    border-collapse: collapse;\n    border: solid 1px #ddd;\n    background: white;\n  }\n\n  td {\n    height: 30px;\n    border: solid 1px #ddd;\n    overflow: hidden;\n    text-align: right;\n  }\n  .row-key {\n    width: min-content;\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n\n  .column-key {\n    min-width: 120px;\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  export let title\n</script>\n\n<section>\n  <h2>{title}</h2>\n  <slot></slot>\n</section>\n\n<style>\n  section {\n    background: #f3f3f3;\n    padding: 20px;\n    border-radius: 10px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    text-align: center;\n  }\n\n  h2 {\n    margin-top: 0px;\n    text-align: center;\n  }\n</style>",
    "<script>\n  export let j\n  export let i\n  export let focused\n  export let data\n  export let p\n  export let handleFocus\n  export let handleBlur\n  export let handleKeydown\n  export let handleInput\n\n  let key = j + i\n  let hasFocus = false\n  $: if (focused === key && !hasFocus) {\n    hasFocus = true\n  } else if (focused !== key && hasFocus) {\n    hasFocus = false\n  }\n</script>\n\n{#if hasFocus}\n  <input\n    id={'input-' + key}\n    value={$data[key] || ''}\n    autofocus\n    on:focus={() => handleFocus(key)}\n    on:blur={() => handleBlur(key)}\n    on:keydown={(e) => handleKeydown(e, j, i)}\n    on:input={(e) => handleInput(e, key)}\n  />\n{:else}\n  <div>{p.parse($data[key]) || ''}</div>\n{/if}\n\n<style>\n  div {\n    width: 100%;\n    max-width: 120px;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  input {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    text-align: right;\n    border: none;\n    outline: none;\n  }\n\n  input:focus {\n    text-align: left;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}